name:          coda
category:      Language
version:       0.0.1
license:       BSD2
cabal-version: 2
license-file:  LICENSE.md
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/coda/
bug-reports:   http://github.com/ekmett/coda/issues
copyright:     Copyright (C) 2017-2018 Edward A. Kmett
build-type:    Simple
synopsis:      The coda compiler
description:   This package provides Coda, a Visual Studio Code language experiment.

data-files:
  test/data/*.golden

extra-source-files:
  .hlint.yaml
  CHANGELOG.md
  CODE_OF_CONDUCT.md
  CONTRIBUTING.md
  README.md
  bin/coda.sh
  bin/coda.bat
  code/*.ts
  data/coda.json
  data/images/*.png
  package.json
  package-lock.json
  tsconfig.json
  tslint.json
  test/code/*.ts

source-repository head
  type: git
  location: git://github.com/ekmett/coda.git

flag terminfo
  description: Build with terminfo.
  default: True
  manual: False

flag test-tasty
  description: Build tasty test suite.
  default: True
  manual: True

flag coda
  description: Build vs code plugin.
  default: True
  manual: True

-- bootstrapping codebase
library
  default-language: Haskell2010
  ghc-options: -Wall
  hs-source-dirs: src

  build-depends:
    ansi-terminal,
    array,
    base >= 4.11 && < 5,
    bound,
    bytestring,
    bytestring-short,
    comonad,
    containers,
    data-default-class,
    exceptions,
    haskeline,
    lens,
    llvm-hs-pure,
    megaparsec,
    optparse-applicative,
    prettyprinter,
    prettyprinter-ansi-terminal,
    prettyprinter-convert-ansi-wl-pprint,
    text,
    text-short,
    transformers

  if flag(terminfo) && !os(windows)
    build-depends: terminfo

  exposed-modules:
    Coda.Console
    Coda.Console.Options
    Coda.Console.Pretty
    Coda.Console.Pretty.LLVM
    Coda.Syntax.Error
    Coda.Syntax.Name
    Coda.Syntax.Lexer
    Coda.Syntax.Located

  other-modules:
    Coda.Console.Unicode

-- bootstrapping executable
executable toccata
  default-language: Haskell2010
  hs-source-dirs: app
  main-is: Main.hs
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N

  build-depends:
    base,
    coda,
    data-default-class,
    optparse-applicative

  other-modules:
    Paths_coda

--------------------------------------------------------------------------------
-- executable
--------------------------------------------------------------------------------

-- vs code plugin
executable coda
  default-language: Haskell2010
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N
  main-is: main.hs
  if flag(coda)
    build-depends: base, coda-common, coda-console, coda-server, optparse-applicative
  else
    buildable: False

--------------------------------------------------------------------------------
-- tests
--------------------------------------------------------------------------------

test-suite tasty
  type: exitcode-stdio-1.0
  default-language: Haskell2010
  main-is: tasty.hs
  hs-source-dirs: test/src
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N
  other-modules:
    ListTest
    MessageTest
    MapTest
    Paths_coda
  autogen-modules: Paths_coda
  if !flag(test-tasty)
    buildable: False
  else
    build-tool-depends: tasty-discover:tasty-discover >= 3.0 && < 4.2
    build-depends: coda-algebra, coda-lsp, coda-syntax
    build-depends:
      aeson,
      base,
      containers,
      bifunctors,
      bytestring,
      filepath,
      lens,
      QuickCheck,
      tagged,
      tasty ^>= 0.11,
      tasty-quickcheck,
      tasty-golden ^>= 2.3,
      tasty-hunit ^>= 0.9,
      text

-- working test file for llvm output
executable llvm-test
  default-language: Haskell2010
  hs-source-dirs: app
  main-is: LLVM.hs
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N

  build-depends:
    base,
    coda,
    llvm-hs-pure,
    text
