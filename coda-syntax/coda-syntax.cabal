name:          coda-syntax
category:      Language
version:       0.0.1
license:       BSD2
cabal-version: >= 2
license-file:  LICENSE.md
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/coda/
bug-reports:   http://github.com/ekmett/coda/issues
copyright:     Copyright (C) 2017 Edward A. Kmett
build-type:    Simple
synopsis:      Syntax for the coda compiler
description:   Syntax for the coda compiler

extra-source-files: .hlint.yaml

source-repository head
  type: git
  location: git://github.com/ekmett/coda.git

-- common functionality
library common
  default-language: Haskell2010
  ghc-options: -Wall
  hs-source-dirs: src/common
  exposed-modules: Alex Change FromText Name Prefix
  build-depends: base, coda-algebra, data-default, hashable, lens, profunctors, text

-- build a dyck language monoid for a given token type
library dyck-mixin
  default-language: Haskell2010
  ghc-options: -Wall
  hs-source-dirs: src/dyck-mixin
  signatures: Token
  exposed-modules: Dyck
  build-depends: base, coda-algebra, comonad, data-default, hashable, lens, text

-- build a rope and document store for a given lexer and summary type
library rope-mixin
  default-language: Haskell2010
  ghc-options: -Wall
  hs-source-dirs: src/rope-mixin
  signatures: Dyck Lexer Summary
  exposed-modules: Document Rope
  build-depends:
    base,
    coda-algebra,
    coda-lsp,
    common,
    comonad,
    data-default,
    hashable,
    lens,
    mtl,
    profunctors,
    text,
    unordered-containers

-- a token type for a haskell-like language
library token
  default-language: Haskell2010
  hs-source-dirs: src/token
  ghc-options: -Wall
  exposed-modules: Coda.Syntax.Token
  build-depends:
    base,
    coda-algebra,
    common,
    containers,
    data-default,
    lens,
    text

-- a simple haskell-like lexer
library lexer
  default-language: Haskell2010
  hs-source-dirs: src/lexer
  ghc-options: -Wall
  build-tools: alex
  exposed-modules: Coda.Syntax.Lexer
  mixins: dyck-mixin (Dyck as Coda.Syntax.Dyck) requires (Token as Coda.Syntax.Token)
  reexported-modules: Coda.Syntax.Token, Coda.Syntax.Dyck

  build-depends:
    array,
    base,
    coda-algebra,
    common,
    data-default,
    dyck-mixin,
    lens,
    text,
    token

-- a trivial summary that ignores its inputs
library summary-unit
  default-language: Haskell2010
  hs-source-dirs: src/summary-unit
  ghc-options: -Wall
  signatures: Dyck
  exposed-modules: Summary
  build-depends: base, coda-algebra, text

library
  default-language: Haskell2010
  ghc-options: -Wall

  mixins:
    summary-unit (Summary as Coda.Syntax.Summary) requires (Dyck as Coda.Syntax.Dyck),
    rope-mixin (Rope as Coda.Syntax.Rope, Document as Coda.Syntax.Document)
      requires (Lexer as Coda.Syntax.Lexer, Summary as Coda.Syntax.Summary, Dyck as Coda.Syntax.Dyck)

  reexported-modules:
    Alex as Coda.Syntax.Alex,
    Change as Coda.Syntax.Change,
    Coda.Syntax.Dyck,
    Coda.Syntax.Document,
    FromText as Coda.Syntax.FromText,
    Coda.Syntax.Lexer,
    Name as Coda.Syntax.Name,
    Prefix as Coda.Syntax.Prefix,
    Coda.Syntax.Token,
    Coda.Syntax.Rope,
    Coda.Syntax.Summary

  build-depends:
    base,
    common,
    lexer,
    rope-mixin,
    summary-unit
